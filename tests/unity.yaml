3DBall:
  check_only_shape: true # model uses RandomNormal
  url: https://github.com/Unity-Technologies/ml-agents/raw/master/UnitySDK/Assets/ML-Agents/Examples/3DBall/TFModels/3DBall.bytes
  model: 3DBall.bytes
  input_get: get_random
  inputs:
    "vector_observation:0": [3, 8]
  outputs:
    - action:0
    - action_probs:0
    - value_estimate:0

3DBallHard:
  check_only_shape: true # model uses RandomNormal
  url: https://github.com/Unity-Technologies/ml-agents/raw/master/UnitySDK/Assets/ML-Agents/Examples/3DBall/TFModels/3DBallHard.bytes
  model: 3DBallHard.bytes
  input_get: get_random
  inputs:
    "vector_observation:0": [1, 25]
  outputs:
    - action:0

Basic:
  url: https://github.com/Unity-Technologies/ml-agents/raw/master/UnitySDK/Assets/ML-Agents/Examples/Basic/TFModels/Basic.bytes
  model: Basic.bytes
  input_get: get_random
  inputs:
    "vector_observation:0": [1, 20]
    "action_masks:0": [1,3]
  outputs:
    - action:0
    - action_probs:0
    - value_estimate:0

Banana:
  url: https://github.com/Unity-Technologies/ml-agents/raw/master/UnitySDK/Assets/ML-Agents/Examples/BananaCollectors/TFModels/Banana.bytes
  model: Banana.bytes
  input_get: get_random256
  inputs:
    "vector_observation:0": [1, 159]
  outputs:
    - action:0
    - action_probs:0
    - value_estimate:0

Bouncer:
  check_only_shape: true # model uses RandomNormal
  url: https://github.com/Unity-Technologies/ml-agents/raw/master/UnitySDK/Assets/ML-Agents/Examples/Bouncer/TFModels/Bouncer.bytes
  model: Bouncer.bytes
  input_get: get_random
  inputs:
    "vector_observation:0": [1, 18]
  outputs:
    - action_probs:0
    - value_estimate:0

DynamicCrawler:
  check_only_shape: true
  url: https://github.com/Unity-Technologies/ml-agents/raw/master/UnitySDK/Assets/ML-Agents/Examples/Crawler/TFModels/DynamicCrawler.bytes
  model: DynamicCrawler.bytes
  input_get: get_random
  inputs:
    "vector_observation:0": [1, 129]
  outputs:
    - action_probs:0
    - value_estimate:0
    - action:0

FixedCrawler:
  check_only_shape: true
  url: https://github.com/Unity-Technologies/ml-agents/raw/master/UnitySDK/Assets/ML-Agents/Examples/Crawler/TFModels/FixedCrawler.bytes
  model: FixedCrawler.bytes
  input_get: get_random
  inputs:
    "vector_observation:0": [1, 129]
  outputs:
    - action_probs:0
    - value_estimate:0
    - action:0

GridWorld_3x3:
  url: https://github.com/Unity-Technologies/ml-agents/raw/master/UnitySDK/Assets/ML-Agents/Examples/GridWorld/TFModels/GridWorld_3x3.bytes
  model: GridWorld_3x3.bytes
  check_only_shape: true
  input_get: get_random
  inputs:
    "visual_observation_0:0": [1, 84, 84, 3]
    "action_masks:0": [1,5]
  outputs:
    - action_probs:0
    - value_estimate:0
    - action:0

GridWorld_5x5:
  url: https://github.com/Unity-Technologies/ml-agents/raw/master/UnitySDK/Assets/ML-Agents/Examples/GridWorld/TFModels/GridWorld_5x5.bytes
  model: GridWorld_5x5.bytes
  input_get: get_random
  check_only_shape: true
  inputs:
    "visual_observation_0:0": [1, 84, 84, 3]
    "action_masks:0": [1,5]
  outputs:
    - action_probs:0
    - value_estimate:0
    - action:0

Hallway:
  # needs: lstm
  disabled: true
  url: https://github.com/Unity-Technologies/ml-agents/raw/master/UnitySDK/Assets/ML-Agents/Examples/Hallway/TFModels/Hallway.bytes
  model: Hallway.bytes
  input_get: get_random
  inputs:
    "vector_observation:0": [1, 36]
    "recurrent_in:0": [1, 256]
    "sequence_length:0": np.array(1)
    "action_masks:0": [1,5]
    "prev_action:0": [1, 1]
  outputs:
    - action_probs:0
    - value_estimate:0
    - action:0

PushBlock:
  url: https://github.com/Unity-Technologies/ml-agents/raw/master/UnitySDK/Assets/ML-Agents/Examples/PushBlock/TFModels/PushBlock.bytes
  model: PushBlock.bytes
  input_get: get_random256
  inputs:
    "vector_observation:0": [1, 210]
    "action_masks:0": [1,7]
  outputs:
    - action_probs:0
    - value_estimate:0
    - action:0

Reacher:
  check_only_shape: true
  url: https://github.com/Unity-Technologies/ml-agents/raw/master/UnitySDK/Assets/ML-Agents/Examples/Reacher/TFModels/Reacher.bytes
  model: Reacher.bytes
  input_get: get_random
  inputs:
    "vector_observation:0": [1, 33]
  outputs:
    - action:0
    - value_estimate:0
    - action_probs:0

SoccerTwos:
  url: https://github.com/Unity-Technologies/ml-agents/raw/master/UnitySDK/Assets/ML-Agents/Examples/Soccer/TFModels/SoccerTwos.bytes
  model: SoccerTwos.bytes
  check_only_shape: true
  input_get: get_random
  inputs:
    "GoalieBrain/vector_observation:0": [1, 336]
    "StrikerBrain/vector_observation:0": [1, 336]
    "GoalieBrain/action_masks:0": [1,5]
    "StrikerBrain/action_masks:0": [1,7]
  outputs:
    - GoalieBrain/action_probs:0
    - GoalieBrain/action:0
    - GoalieBrain/value_estimate:0
    - StrikerBrain/action_probs:0
    - StrikerBrain/action:0
    - StrikerBrain/value_estimate:0

Tennis:
  url: https://github.com/Unity-Technologies/ml-agents/raw/master/UnitySDK/Assets/ML-Agents/Examples/Tennis/TFModels/Tennis.bytes
  model: Tennis.bytes
  input_get: get_random
  inputs:
    "vector_observation:0": [1, 24]
  outputs:
    - value_estimate:0

WallJump:
  url: https://github.com/Unity-Technologies/ml-agents/raw/master/UnitySDK/Assets/ML-Agents/Examples/WallJump/TFModels/WallJump.bytes
  model: WallJump.bytes
  check_only_shape: true
  input_get: get_random
  inputs:
    "SmallWallBrain/vector_observation:0": [1, 444]
    "SmallWallBrain/action_masks:0": [1,11]
    "BigWallBrain/vector_observation:0": [1, 444]
    "BigWallBrain/action_masks:0": [1,11]
  outputs:
    - SmallWallBrain/action_probs:0
    - SmallWallBrain/action:0
    - SmallWallBrain/value_estimate:0
    - BigWallBrain/action_probs:0
    - BigWallBrain/action:0
    - BigWallBrain/value_estimate:0

Pyramids:
  url: https://github.com/Unity-Technologies/ml-agents/raw/master/UnitySDK/Assets/ML-Agents/Examples/Pyramids/TFModels/Pyramids.bytes
  model: Pyramids.bytes
  input_get: get_random
  inputs:
    "vector_observation:0": [1, 172]
  outputs:
    - value_estimate:0

Walker:
  url: https://github.com/Unity-Technologies/ml-agents/raw/master/UnitySDK/Assets/ML-Agents/Examples/Walker/TFModels/Walker.bytes
  model: Walker.bytes
  input_get: get_random
  inputs:
    "vector_observation:0": [1, 212]
  outputs:
    - value_estimate:0

